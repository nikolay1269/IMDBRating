//
// ImdbapiEpisode.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ImdbapiEpisode: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: String?
    public var title: String?
    public var primaryImage: ImdbapiImage?
    public var season: String?
    public var episodeNumber: Int?
    public var runtimeSeconds: Int?
    public var plot: String?
    public var rating: ImdbapiRating?
    public var releaseDate: ImdbapiPrecisionDate?

    public init(id: String? = nil, title: String? = nil, primaryImage: ImdbapiImage? = nil, season: String? = nil, episodeNumber: Int? = nil, runtimeSeconds: Int? = nil, plot: String? = nil, rating: ImdbapiRating? = nil, releaseDate: ImdbapiPrecisionDate? = nil) {
        self.id = id
        self.title = title
        self.primaryImage = primaryImage
        self.season = season
        self.episodeNumber = episodeNumber
        self.runtimeSeconds = runtimeSeconds
        self.plot = plot
        self.rating = rating
        self.releaseDate = releaseDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case title
        case primaryImage
        case season
        case episodeNumber
        case runtimeSeconds
        case plot
        case rating
        case releaseDate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(primaryImage, forKey: .primaryImage)
        try container.encodeIfPresent(season, forKey: .season)
        try container.encodeIfPresent(episodeNumber, forKey: .episodeNumber)
        try container.encodeIfPresent(runtimeSeconds, forKey: .runtimeSeconds)
        try container.encodeIfPresent(plot, forKey: .plot)
        try container.encodeIfPresent(rating, forKey: .rating)
        try container.encodeIfPresent(releaseDate, forKey: .releaseDate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ImdbapiEpisode: Identifiable {}
