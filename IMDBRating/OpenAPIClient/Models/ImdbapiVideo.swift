//
// ImdbapiVideo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Video is a message that represents a video associated with a title. */
public struct ImdbapiVideo: Sendable, Codable, ParameterConvertible, Hashable {

    /** The unique identifier for the video. */
    public var id: String?
    /** The type of the video. */
    public var type: String?
    /** The name of the video. */
    public var name: String?
    public var primaryImage: ImdbapiImage?
    /** A description of the video. */
    public var description: String?
    /** The width of the video in pixels. */
    public var width: Int?
    /** The height of the video in pixels. */
    public var height: Int?
    /** The runtime of the video in seconds. */
    public var runtimeSeconds: Int?

    public init(id: String? = nil,
                type: String? = nil,
                name: String? = nil,
                primaryImage: ImdbapiImage? = nil,
                description: String? = nil,
                width: Int? = nil,
                height: Int? = nil,
                runtimeSeconds: Int? = nil) {
        self.id = id
        self.type = type
        self.name = name
        self.primaryImage = primaryImage
        self.description = description
        self.width = width
        self.height = height
        self.runtimeSeconds = runtimeSeconds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case type
        case name
        case primaryImage
        case description
        case width
        case height
        case runtimeSeconds
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(primaryImage, forKey: .primaryImage)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(width, forKey: .width)
        try container.encodeIfPresent(height, forKey: .height)
        try container.encodeIfPresent(runtimeSeconds, forKey: .runtimeSeconds)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ImdbapiVideo: Identifiable {}
