//
// ImdbapiEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ImdbapiEvent: Sendable, Codable, ParameterConvertible, Hashable {

    /** The unique identifier for the event. */
    public var id: String?
    /** The name of the event. */
    public var name: String?

    public init(id: String? = nil, name: String? = nil) {
        self.id = id
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ImdbapiEvent: Identifiable {}
